import numpy as np


if __name__ == '__main__':
    p = np.array([
        [[1, 0, 0, 0], 
         [0, 0, 1, 0], 
         [0, 0, 0, 1], 
         [0, 1, 0, 0]],
        [[1, 0, 0, 0], 
         [0, 0, 0, 1], 
         [0, 1, 0, 0], 
         [0, 0, 1, 0]],
        [[0, 1, 0, 0], 
         [0, 0, 1, 0], 
         [1, 0, 0, 0], 
         [0, 0, 0, 1]], 
        [[0, 1, 0, 0], 
         [0, 0, 0, 1], 
         [0, 0, 1, 0], 
         [1, 0, 0, 0]],
        [[0, 0, 1, 0], 
         [1, 0, 0, 0], 
         [0, 1, 0, 0], 
         [0, 0, 0, 1]],  
        [[0, 0, 1, 0], 
         [0, 1, 0, 0], 
         [0, 0, 0, 1], 
         [1, 0, 0, 0]],
        [[0, 0, 0, 1], 
         [1, 0, 0, 0], 
         [0, 0, 1, 0], 
         [0, 1, 0, 0]],
        [[0, 0, 0, 1], 
         [0, 1, 0, 0], 
         [1, 0, 0, 0], 
         [0, 0, 1, 0]],
    ])


    # for i, mat in enumerate(permutations):
    #     if np.trace(mat) == 1 and np.trace(np.flip(mat)) == 1: print(i)


    ids = (1 * p[0] + 2 * p[7] + 3 * p[4] + 4 * p[6]) + (5 * p[1] + 6 * p[4] + 7 * p[5] + 8 * p[7]) + \
          (9 * p[2] + 10 * p[0] + 11 * p[6] + 12 * p[3]) + (13 * p[1] + 14 * p[5] + 15 * p[2] + 16 * p[3])

    # lol this works chillin
    print(ids)
    
    
